extern crate test;
mod output_benchmark;
use output_benchmark::write_output;

#[cfg(test)]
mod tests{
//extern crate collections;
extern crate test;

use test::BenchHarness;
//use collections::HashMap;

use Hashmaptest_mod::setup_hashmap;
use Hashmaptest_mod::test_running;
mod Hashmaptest_mod;

fn bench_dens60(b: &mut BenchHarness) {
	let map = setup_hashmap(1000, 60);
	b.iter(|| test_running(50, 100, 50, 5, map.clone()));
	}


fn bench_dens70(b: &mut BenchHarness) {
	let map = setup_hashmap(100, 70);
	b.iter(|| test_running(50, 100, 50, 5, map.clone()));
	}


fn bench_dens80(b: &mut BenchHarness) {
	let map = setup_hashmap(100, 80);
	b.iter(|| test_running(50, 100, 50, 5, map.clone()));
	}

fn bench_dens90(b: &mut BenchHarness) {
	let map = setup_hashmap(100, 90);
	b.iter(|| test_running(50, 100, 50, 5, map.clone()));
	}
}

fn main(){
   	let filename = ~"hashmap-tests";
	let title = ~"Hashmap single thread tests";
	let x_axis = ~"Hashmap density";
	ley y_axis = ~"ns/iteration";
	let data_points = ~[60,70,80,90]
	write_output(filename, title, x_axis, y_axis, data_points);
}
